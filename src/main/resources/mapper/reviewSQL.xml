<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="review">
	<select id="selectreviewList" resultType="r">
		select 
			review_no as reviewNo,
			review_comment as reviewComment,
			store_no as storeNo,
			review_writer as reviewWriter,
			review_content as reviewContent,
			review_date as reviewDate,
			rating,
			review_img as reviewImg,
			review_view as reviewView
		from review
	</select>
	
	<select id="ReviewList" parameterType="map" resultType="r">
	select * from
	(select rownum as rnum, r.*from
	(select
			review_no as reviewNo,
			review_comment as reviewComment,
			store_no as storeNo,
			review_writer as reviewWriter,
			review_content as reviewContent,
			review_date as reviewDate,
			rating,
			review_img as reviewImg,
			review_view as reviewView
	from review order by 1 desc)r)
	where rnum between #{start} and #{end}
	</select>
	
	<select id="totalCount" resultType="int">
		select count(*) from review
	</select>
	
	<select id="memberTotalCount" parameterType="string" resultType="_int">
		select count(*) from review where review_writer=#{memberId}
	</select>	
	
	<select id="memberSelectReviewList" parameterType="map" resultType="r">
	   	select * from
		(select rownum as rnum, r.* from
		(select
		    review_no as reviewNo,
		    review_comment as reviewComment,
		    store_no as storeNo,
		    review_writer as reviewWriter,
		    review_content as reviewContent,
	        review_date as reviewDate,
	        rating,
	        review_img as reviewImg
		from (select * from review join member on(review_writer = member_id)) order by 1 desc)r where reviewWriter=#{memberId})
	    where rnum between #{start} and #{end}
	</select>
	
	<select id="selectOneReview" parameterType="int" resultType="r">
		select
			review_no as reviewNo,
			review_comment as reviewComment,
			store_no as storeNo,
			review_writer as reviewWriter,
			review_content as reviewContent,
			review_view as reviewView,
			review_date as reviewDate,
			rating,
			review_img as reviewImg
		from review where review_no = #{reviewNo} 
	</select>

	<select id="selectStoreName" parameterType="int" resultType="string">
		select store_Name as storeName 
		from store where store_No = #{storeNo}
	</select>
		
	<delete id="deleteReview">
		delete from review where review_no = #{reviewNo}
	</delete>		
	
	<update id="updateView">
		update review set 
		review_view = nvl(review_view,0)+1 where review_no =#{reviewNo} 
	</update>
	
	<!-- 매장 리뷰리스트 조회 -->
	<select id="selectStoreReview" parameterType="_int" resultType="r">
		select 
			review_no as reviewNo,
			review_comment as reviewComment,
			store_no as storeNo,
			review_writer as reviewWriter,
			review_content as reviewContent,
			review_date as reviewDate,
			rating,
			review_img as reviewImg,
			review_view as reviewView
		from review
		where store_no = #{_parameter}
	</select>
	
	<insert id="insertReview" parameterType="r">
		insert into review
		values(
			review_seq.nextval,
			<choose>
				<when test="reviewComment == 0">
					null,
				</when>
				<otherwise>
					#{reviewComment},
				</otherwise>
			</choose>
			#{storeNo},
			#{reviewWriter},
			#{reviewContent},
			to_char(sysdate,'yyyy-mm-dd'),
			#{rating},
			#{reviewImg},
			0		
		)
	</insert>
	
	<select id="reviewAbleCount" parameterType="map" resultType="_int">
		select
    		(select count(order_no) from orders where store_no=#{storeNo} and member_no =#{memberNo} and order_state='결제완료')
		    -
		    (select count(review_no) from review where review_writer = (select member_id from member where member_no= #{memberNo}) and store_no = #{storeNo})
		    as cnt
		from dual
	
	</select>
</mapper>
